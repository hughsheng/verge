apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tl.veger"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('keystore\\veger.jks')
            storePassword 'veger001'
            keyAlias = 'veger'
            keyPassword 'veger001'
        }

        debug {
            storeFile file('keystore\\veger.jks')
            storePassword 'veger001'
            keyAlias = 'veger'
            keyPassword 'veger001'
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            def buildTypeName = variant.buildType.name
            if (buildTypeName == 'release') {
                fileName = "VEGER_v" + versionName + "_" + buildTypeName+".apk"
                outputFileName = new File(fileName)
            } else if (buildTypeName == 'debug') {
                fileName = "VEGER_v" + versionName + "_" + buildTypeName+".apk"
                outputFileName = new File(fileName)
            }
        }

    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Mockito framework（可选，用于模拟一些依赖对象，以达到隔离依赖的效果）
//    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    //eventbus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //gson
    implementation "com.google.code.gson:gson:2.8.5"

    //rxandroid
    implementation "io.reactivex.rxjava2:rxjava:2.2.2"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    //gmail邮件查询
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.api-client:google-api-client-gson:1.20.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-gmail:v1-rev83-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile "androidx.core:core-ktx:+"
    compile "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
